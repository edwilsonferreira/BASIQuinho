# Generated from BASIQuinho.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,17,122,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,1,0,1,0,1,1,1,1,1,2,1,2,1,
        3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,4,8,53,8,8,11,8,12,8,54,
        1,8,1,8,1,9,1,9,1,9,1,9,1,9,5,9,64,8,9,10,9,12,9,67,9,9,1,9,1,9,
        1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,12,
        1,12,1,12,1,12,1,13,1,13,5,13,89,8,13,10,13,12,13,92,9,13,1,14,4,
        14,95,8,14,11,14,12,14,96,1,14,1,14,4,14,101,8,14,11,14,12,14,102,
        3,14,105,8,14,1,15,1,15,5,15,109,8,15,10,15,12,15,112,9,15,1,15,
        1,15,1,16,3,16,117,8,16,1,16,1,16,3,16,121,8,16,1,110,0,17,1,1,3,
        2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,
        29,15,31,16,33,17,1,0,6,2,0,9,9,32,32,2,0,10,10,13,13,3,0,65,90,
        95,95,97,122,4,0,48,57,65,90,95,95,97,122,1,0,48,57,3,0,10,10,13,
        13,34,34,130,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,
        1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,
        1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,
        1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,1,35,1,0,0,0,3,37,1,0,0,0,5,39,
        1,0,0,0,7,41,1,0,0,0,9,43,1,0,0,0,11,45,1,0,0,0,13,47,1,0,0,0,15,
        49,1,0,0,0,17,52,1,0,0,0,19,58,1,0,0,0,21,70,1,0,0,0,23,76,1,0,0,
        0,25,82,1,0,0,0,27,86,1,0,0,0,29,94,1,0,0,0,31,106,1,0,0,0,33,120,
        1,0,0,0,35,36,5,61,0,0,36,2,1,0,0,0,37,38,5,44,0,0,38,4,1,0,0,0,
        39,40,5,43,0,0,40,6,1,0,0,0,41,42,5,45,0,0,42,8,1,0,0,0,43,44,5,
        42,0,0,44,10,1,0,0,0,45,46,5,47,0,0,46,12,1,0,0,0,47,48,5,40,0,0,
        48,14,1,0,0,0,49,50,5,41,0,0,50,16,1,0,0,0,51,53,7,0,0,0,52,51,1,
        0,0,0,53,54,1,0,0,0,54,52,1,0,0,0,54,55,1,0,0,0,55,56,1,0,0,0,56,
        57,6,8,0,0,57,18,1,0,0,0,58,59,5,82,0,0,59,60,5,69,0,0,60,61,5,77,
        0,0,61,65,1,0,0,0,62,64,8,1,0,0,63,62,1,0,0,0,64,67,1,0,0,0,65,63,
        1,0,0,0,65,66,1,0,0,0,66,68,1,0,0,0,67,65,1,0,0,0,68,69,6,9,0,0,
        69,20,1,0,0,0,70,71,5,73,0,0,71,72,5,78,0,0,72,73,5,80,0,0,73,74,
        5,85,0,0,74,75,5,84,0,0,75,22,1,0,0,0,76,77,5,80,0,0,77,78,5,82,
        0,0,78,79,5,73,0,0,79,80,5,78,0,0,80,81,5,84,0,0,81,24,1,0,0,0,82,
        83,5,76,0,0,83,84,5,69,0,0,84,85,5,84,0,0,85,26,1,0,0,0,86,90,7,
        2,0,0,87,89,7,3,0,0,88,87,1,0,0,0,89,92,1,0,0,0,90,88,1,0,0,0,90,
        91,1,0,0,0,91,28,1,0,0,0,92,90,1,0,0,0,93,95,7,4,0,0,94,93,1,0,0,
        0,95,96,1,0,0,0,96,94,1,0,0,0,96,97,1,0,0,0,97,104,1,0,0,0,98,100,
        5,46,0,0,99,101,7,4,0,0,100,99,1,0,0,0,101,102,1,0,0,0,102,100,1,
        0,0,0,102,103,1,0,0,0,103,105,1,0,0,0,104,98,1,0,0,0,104,105,1,0,
        0,0,105,30,1,0,0,0,106,110,5,34,0,0,107,109,8,5,0,0,108,107,1,0,
        0,0,109,112,1,0,0,0,110,111,1,0,0,0,110,108,1,0,0,0,111,113,1,0,
        0,0,112,110,1,0,0,0,113,114,5,34,0,0,114,32,1,0,0,0,115,117,5,13,
        0,0,116,115,1,0,0,0,116,117,1,0,0,0,117,118,1,0,0,0,118,121,5,10,
        0,0,119,121,5,59,0,0,120,116,1,0,0,0,120,119,1,0,0,0,121,34,1,0,
        0,0,10,0,54,65,90,96,102,104,110,116,120,1,6,0,0
    ]

class BASIQuinhoLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    WS = 9
    LINE_COMMENT = 10
    INPUT = 11
    PRINT = 12
    LET = 13
    ID = 14
    NUMBER = 15
    STRING = 16
    NEWLINE = 17

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'='", "','", "'+'", "'-'", "'*'", "'/'", "'('", "')'", "'INPUT'", 
            "'PRINT'", "'LET'" ]

    symbolicNames = [ "<INVALID>",
            "WS", "LINE_COMMENT", "INPUT", "PRINT", "LET", "ID", "NUMBER", 
            "STRING", "NEWLINE" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "WS", "LINE_COMMENT", "INPUT", "PRINT", "LET", 
                  "ID", "NUMBER", "STRING", "NEWLINE" ]

    grammarFileName = "BASIQuinho.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


